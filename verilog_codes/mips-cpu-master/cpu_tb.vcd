$date
	Thu Mar 13 01:25:07 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module cpu_TB $end
$var event 1 ! reset_done $end
$var wire 32 " dataBus [31:0] $end
$var wire 1 # memRWPin $end
$var wire 32 $ addressBus [31:0] $end
$var reg 32 % MemData [31:0] $end
$var reg 1 & clk $end
$var reg 1 ' memOpDone $end
$var reg 1 ( reset $end
$scope module MipsCpu $end
$var wire 1 & clk $end
$var wire 32 ) dataBus [31:0] $end
$var wire 1 ' memOpDone $end
$var wire 1 ( reset $end
$var wire 1 * zero $end
$var wire 5 + sa [4:0] $end
$var wire 5 , rt [4:0] $end
$var wire 5 - rs [4:0] $end
$var wire 5 . rgw [4:0] $end
$var wire 32 / result [31:0] $end
$var wire 32 0 rdata2 [31:0] $end
$var wire 32 1 rdata1 [31:0] $end
$var wire 5 2 rd [4:0] $end
$var wire 32 3 pc_next [31:0] $end
$var wire 1 4 pcOverflow $end
$var wire 1 5 overflow $end
$var wire 6 6 opcode [5:0] $end
$var wire 26 7 instidx [25:0] $end
$var wire 32 8 immediate [31:0] $end
$var wire 6 9 fn [5:0] $end
$var wire 32 : fetchedInst [31:0] $end
$var wire 1 ; contRegWrite $end
$var wire 1 < contMemtoReg $end
$var wire 1 = contMemWrite $end
$var wire 1 > contMemRead $end
$var wire 1 ? contJmp $end
$var wire 1 @ contDstReg $end
$var wire 1 A contBranch $end
$var wire 2 B contAluop [1:0] $end
$var wire 1 C contALUSrc $end
$var wire 4 D aluCtrl [3:0] $end
$var wire 16 E addrim [15:0] $end
$var parameter 3 F EX $end
$var parameter 3 G ID $end
$var parameter 3 H IF $end
$var parameter 3 I MEM $end
$var parameter 3 J WB $end
$var reg 32 K MemData [31:0] $end
$var reg 1 L MemopInProg $end
$var reg 32 M NextAdd [31:0] $end
$var reg 1 N RegWrite $end
$var reg 32 O addressBus [31:0] $end
$var reg 2 P aluOp [1:0] $end
$var reg 1 Q aluSrc $end
$var reg 32 R data1 [31:0] $end
$var reg 32 S data2 [31:0] $end
$var reg 32 T imm [31:0] $end
$var reg 32 U instruction [31:0] $end
$var reg 1 # memRWPin $end
$var reg 32 V pc [31:0] $end
$var reg 32 W rgwdata [31:0] $end
$var reg 3 X stage [2:0] $end
$scope module NexTinst $end
$var wire 32 Y num1 [31:0] $end
$var wire 32 Z num2 [31:0] $end
$var wire 1 [ op $end
$var wire 32 \ sumO [31:0] $end
$var wire 32 ] sum [31:0] $end
$var wire 32 ^ num2C [31:0] $end
$var wire 1 4 carryO $end
$var wire 32 _ carry [31:0] $end
$scope begin genblk1[0] $end
$var parameter 2 ` i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 [ carryI $end
$var wire 1 a carryO $end
$var wire 1 b num1 $end
$var wire 1 c num2 $end
$var wire 1 d sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 e i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 f carryI $end
$var wire 1 g carryO $end
$var wire 1 h num1 $end
$var wire 1 i num2 $end
$var wire 1 j sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 k i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 l carryI $end
$var wire 1 m carryO $end
$var wire 1 n num1 $end
$var wire 1 o num2 $end
$var wire 1 p sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 q i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 r carryI $end
$var wire 1 s carryO $end
$var wire 1 t num1 $end
$var wire 1 u num2 $end
$var wire 1 v sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 w i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 x carryI $end
$var wire 1 y carryO $end
$var wire 1 z num1 $end
$var wire 1 { num2 $end
$var wire 1 | sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 } i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 ~ carryI $end
$var wire 1 !" carryO $end
$var wire 1 "" num1 $end
$var wire 1 #" num2 $end
$var wire 1 $" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 %" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 &" carryI $end
$var wire 1 '" carryO $end
$var wire 1 (" num1 $end
$var wire 1 )" num2 $end
$var wire 1 *" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 +" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 ," carryI $end
$var wire 1 -" carryO $end
$var wire 1 ." num1 $end
$var wire 1 /" num2 $end
$var wire 1 0" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 1" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 2" carryI $end
$var wire 1 3" carryO $end
$var wire 1 4" num1 $end
$var wire 1 5" num2 $end
$var wire 1 6" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 7" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 8" carryI $end
$var wire 1 9" carryO $end
$var wire 1 :" num1 $end
$var wire 1 ;" num2 $end
$var wire 1 <" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 =" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 >" carryI $end
$var wire 1 ?" carryO $end
$var wire 1 @" num1 $end
$var wire 1 A" num2 $end
$var wire 1 B" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 C" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 D" carryI $end
$var wire 1 E" carryO $end
$var wire 1 F" num1 $end
$var wire 1 G" num2 $end
$var wire 1 H" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 I" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 J" carryI $end
$var wire 1 K" carryO $end
$var wire 1 L" num1 $end
$var wire 1 M" num2 $end
$var wire 1 N" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 O" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 P" carryI $end
$var wire 1 Q" carryO $end
$var wire 1 R" num1 $end
$var wire 1 S" num2 $end
$var wire 1 T" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 U" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 V" carryI $end
$var wire 1 W" carryO $end
$var wire 1 X" num1 $end
$var wire 1 Y" num2 $end
$var wire 1 Z" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 [" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 \" carryI $end
$var wire 1 ]" carryO $end
$var wire 1 ^" num1 $end
$var wire 1 _" num2 $end
$var wire 1 `" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 a" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 b" carryI $end
$var wire 1 c" carryO $end
$var wire 1 d" num1 $end
$var wire 1 e" num2 $end
$var wire 1 f" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 g" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 h" carryI $end
$var wire 1 i" carryO $end
$var wire 1 j" num1 $end
$var wire 1 k" num2 $end
$var wire 1 l" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 m" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 n" carryI $end
$var wire 1 o" carryO $end
$var wire 1 p" num1 $end
$var wire 1 q" num2 $end
$var wire 1 r" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 s" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 t" carryI $end
$var wire 1 u" carryO $end
$var wire 1 v" num1 $end
$var wire 1 w" num2 $end
$var wire 1 x" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 y" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 z" carryI $end
$var wire 1 {" carryO $end
$var wire 1 |" num1 $end
$var wire 1 }" num2 $end
$var wire 1 ~" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 !# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 "# carryI $end
$var wire 1 ## carryO $end
$var wire 1 $# num1 $end
$var wire 1 %# num2 $end
$var wire 1 &# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 '# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 (# carryI $end
$var wire 1 )# carryO $end
$var wire 1 *# num1 $end
$var wire 1 +# num2 $end
$var wire 1 ,# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 -# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 .# carryI $end
$var wire 1 /# carryO $end
$var wire 1 0# num1 $end
$var wire 1 1# num2 $end
$var wire 1 2# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 3# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 4# carryI $end
$var wire 1 5# carryO $end
$var wire 1 6# num1 $end
$var wire 1 7# num2 $end
$var wire 1 8# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 9# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 :# carryI $end
$var wire 1 ;# carryO $end
$var wire 1 <# num1 $end
$var wire 1 =# num2 $end
$var wire 1 ># sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 ?# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 @# carryI $end
$var wire 1 A# carryO $end
$var wire 1 B# num1 $end
$var wire 1 C# num2 $end
$var wire 1 D# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 E# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 F# carryI $end
$var wire 1 G# carryO $end
$var wire 1 H# num1 $end
$var wire 1 I# num2 $end
$var wire 1 J# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 K# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 L# carryI $end
$var wire 1 M# carryO $end
$var wire 1 N# num1 $end
$var wire 1 O# num2 $end
$var wire 1 P# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 Q# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 R# carryI $end
$var wire 1 S# carryO $end
$var wire 1 T# num1 $end
$var wire 1 U# num2 $end
$var wire 1 V# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 W# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 X# carryI $end
$var wire 1 Y# carryO $end
$var wire 1 Z# num1 $end
$var wire 1 [# num2 $end
$var wire 1 \# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 ]# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 ^# carryI $end
$var wire 1 _# carryO $end
$var wire 1 `# num1 $end
$var wire 1 a# num2 $end
$var wire 1 b# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module RegisterFile $end
$var wire 5 c# rgr1 [4:0] $end
$var wire 5 d# rgr2 [4:0] $end
$var wire 5 e# rgw1 [4:0] $end
$var wire 32 f# rgw1data [31:0] $end
$var wire 1 N write $end
$var reg 32 g# rg1data [31:0] $end
$var reg 32 h# rg2data [31:0] $end
$var integer 32 i# i [31:0] $end
$upscope $end
$scope module alu $end
$var wire 1 Q aluSrc $end
$var wire 32 j# data1 [31:0] $end
$var wire 32 k# data2 [31:0] $end
$var wire 32 l# imm [31:0] $end
$var wire 1 * zero $end
$var wire 32 m# sum [31:0] $end
$var wire 1 5 overflow $end
$var wire 1 n# op $end
$var wire 32 o# d2 [31:0] $end
$var wire 1 p# carry $end
$var wire 4 q# aluCtrl [3:0] $end
$var reg 32 r# result [31:0] $end
$scope module addsub $end
$var wire 32 s# num1 [31:0] $end
$var wire 32 t# num2 [31:0] $end
$var wire 1 n# op $end
$var wire 32 u# sumO [31:0] $end
$var wire 32 v# sum [31:0] $end
$var wire 32 w# num2C [31:0] $end
$var wire 1 p# carryO $end
$var wire 32 x# carry [31:0] $end
$scope begin genblk1[0] $end
$var parameter 2 y# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 n# carryI $end
$var wire 1 z# carryO $end
$var wire 1 {# num1 $end
$var wire 1 |# num2 $end
$var wire 1 }# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 ~# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 !$ carryI $end
$var wire 1 "$ carryO $end
$var wire 1 #$ num1 $end
$var wire 1 $$ num2 $end
$var wire 1 %$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 &$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 '$ carryI $end
$var wire 1 ($ carryO $end
$var wire 1 )$ num1 $end
$var wire 1 *$ num2 $end
$var wire 1 +$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 ,$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 -$ carryI $end
$var wire 1 .$ carryO $end
$var wire 1 /$ num1 $end
$var wire 1 0$ num2 $end
$var wire 1 1$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 2$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 3$ carryI $end
$var wire 1 4$ carryO $end
$var wire 1 5$ num1 $end
$var wire 1 6$ num2 $end
$var wire 1 7$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 8$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 9$ carryI $end
$var wire 1 :$ carryO $end
$var wire 1 ;$ num1 $end
$var wire 1 <$ num2 $end
$var wire 1 =$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 >$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 ?$ carryI $end
$var wire 1 @$ carryO $end
$var wire 1 A$ num1 $end
$var wire 1 B$ num2 $end
$var wire 1 C$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 D$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 E$ carryI $end
$var wire 1 F$ carryO $end
$var wire 1 G$ num1 $end
$var wire 1 H$ num2 $end
$var wire 1 I$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 J$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 K$ carryI $end
$var wire 1 L$ carryO $end
$var wire 1 M$ num1 $end
$var wire 1 N$ num2 $end
$var wire 1 O$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 P$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 Q$ carryI $end
$var wire 1 R$ carryO $end
$var wire 1 S$ num1 $end
$var wire 1 T$ num2 $end
$var wire 1 U$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 V$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 W$ carryI $end
$var wire 1 X$ carryO $end
$var wire 1 Y$ num1 $end
$var wire 1 Z$ num2 $end
$var wire 1 [$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 \$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 ]$ carryI $end
$var wire 1 ^$ carryO $end
$var wire 1 _$ num1 $end
$var wire 1 `$ num2 $end
$var wire 1 a$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 b$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 c$ carryI $end
$var wire 1 d$ carryO $end
$var wire 1 e$ num1 $end
$var wire 1 f$ num2 $end
$var wire 1 g$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 h$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 i$ carryI $end
$var wire 1 j$ carryO $end
$var wire 1 k$ num1 $end
$var wire 1 l$ num2 $end
$var wire 1 m$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 n$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 o$ carryI $end
$var wire 1 p$ carryO $end
$var wire 1 q$ num1 $end
$var wire 1 r$ num2 $end
$var wire 1 s$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 t$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 u$ carryI $end
$var wire 1 v$ carryO $end
$var wire 1 w$ num1 $end
$var wire 1 x$ num2 $end
$var wire 1 y$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 z$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 {$ carryI $end
$var wire 1 |$ carryO $end
$var wire 1 }$ num1 $end
$var wire 1 ~$ num2 $end
$var wire 1 !% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 "% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 #% carryI $end
$var wire 1 $% carryO $end
$var wire 1 %% num1 $end
$var wire 1 &% num2 $end
$var wire 1 '% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 (% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 )% carryI $end
$var wire 1 *% carryO $end
$var wire 1 +% num1 $end
$var wire 1 ,% num2 $end
$var wire 1 -% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 .% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 /% carryI $end
$var wire 1 0% carryO $end
$var wire 1 1% num1 $end
$var wire 1 2% num2 $end
$var wire 1 3% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 4% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 5% carryI $end
$var wire 1 6% carryO $end
$var wire 1 7% num1 $end
$var wire 1 8% num2 $end
$var wire 1 9% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 :% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 ;% carryI $end
$var wire 1 <% carryO $end
$var wire 1 =% num1 $end
$var wire 1 >% num2 $end
$var wire 1 ?% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 @% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 A% carryI $end
$var wire 1 B% carryO $end
$var wire 1 C% num1 $end
$var wire 1 D% num2 $end
$var wire 1 E% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 F% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 G% carryI $end
$var wire 1 H% carryO $end
$var wire 1 I% num1 $end
$var wire 1 J% num2 $end
$var wire 1 K% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 L% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 M% carryI $end
$var wire 1 N% carryO $end
$var wire 1 O% num1 $end
$var wire 1 P% num2 $end
$var wire 1 Q% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 R% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 S% carryI $end
$var wire 1 T% carryO $end
$var wire 1 U% num1 $end
$var wire 1 V% num2 $end
$var wire 1 W% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 X% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 Y% carryI $end
$var wire 1 Z% carryO $end
$var wire 1 [% num1 $end
$var wire 1 \% num2 $end
$var wire 1 ]% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 ^% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 _% carryI $end
$var wire 1 `% carryO $end
$var wire 1 a% num1 $end
$var wire 1 b% num2 $end
$var wire 1 c% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 d% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 e% carryI $end
$var wire 1 f% carryO $end
$var wire 1 g% num1 $end
$var wire 1 h% num2 $end
$var wire 1 i% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 j% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 k% carryI $end
$var wire 1 l% carryO $end
$var wire 1 m% num1 $end
$var wire 1 n% num2 $end
$var wire 1 o% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 p% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 q% carryI $end
$var wire 1 r% carryO $end
$var wire 1 s% num1 $end
$var wire 1 t% num2 $end
$var wire 1 u% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 v% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 w% carryI $end
$var wire 1 x% carryO $end
$var wire 1 y% num1 $end
$var wire 1 z% num2 $end
$var wire 1 {% sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module aluControl $end
$var wire 2 |% aluOp [1:0] $end
$var wire 6 }% fn [5:0] $end
$var parameter 6 ~% ADDFN $end
$var parameter 6 !& ADDUFN $end
$var parameter 6 "& ANDFN $end
$var parameter 6 #& ORFN $end
$var parameter 6 $& SLLFN $end
$var parameter 6 %& SLTFN $end
$var parameter 6 && SRLFN $end
$var parameter 6 '& SUBFN $end
$var parameter 6 (& SUBUFN $end
$var reg 4 )& aluCtrl [3:0] $end
$var reg 4 *& fno [3:0] $end
$upscope $end
$scope module controlUnit $end
$var wire 6 +& opcode [5:0] $end
$var parameter 6 ,& ADD $end
$var parameter 6 -& ADDI $end
$var parameter 6 .& ADDU $end
$var parameter 6 /& AND $end
$var parameter 6 0& BEQ $end
$var parameter 6 1& BNE $end
$var parameter 6 2& J $end
$var parameter 6 3& LW $end
$var parameter 6 4& OR $end
$var parameter 6 5& SLL $end
$var parameter 6 6& SLT $end
$var parameter 6 7& SRL $end
$var parameter 6 8& SUB $end
$var parameter 6 9& SUBU $end
$var parameter 6 :& SW $end
$var reg 1 C ALUSrc $end
$var reg 2 ;& ALUop [1:0] $end
$var reg 1 > MemRead $end
$var reg 1 = MemWrite $end
$var reg 1 < MemtoReg $end
$var reg 1 ; RegWrite $end
$var reg 1 A branch $end
$var reg 1 @ dstReg $end
$var reg 1 ? jmp $end
$upscope $end
$scope module fetchIns $end
$var wire 32 <& instruction [31:0] $end
$var wire 32 =& pc [31:0] $end
$var parameter 56 >& IM_DATA $end
$var parameter 32 ?& NMEM $end
$upscope $end
$upscope $end
$scope task rst $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1111 ?&
b1001001010011010010111001101101011010010111000001110011 >&
b101011 :&
b0 9&
b0 8&
b0 7&
b0 6&
b0 5&
b0 4&
b100011 3&
b10 2&
b101 1&
b100 0&
b0 /&
b0 .&
b1000 -&
b0 ,&
b100011 (&
b100010 '&
b10 &&
b101010 %&
b0 $&
b100101 #&
b100100 "&
b100001 !&
b100000 ~%
b11111 v%
b11110 p%
b11101 j%
b11100 d%
b11011 ^%
b11010 X%
b11001 R%
b11000 L%
b10111 F%
b10110 @%
b10101 :%
b10100 4%
b10011 .%
b10010 (%
b10001 "%
b10000 z$
b1111 t$
b1110 n$
b1101 h$
b1100 b$
b1011 \$
b1010 V$
b1001 P$
b1000 J$
b111 D$
b110 >$
b101 8$
b100 2$
b11 ,$
b10 &$
b1 ~#
b0 y#
b11111 ]#
b11110 W#
b11101 Q#
b11100 K#
b11011 E#
b11010 ?#
b11001 9#
b11000 3#
b10111 -#
b10110 '#
b10101 !#
b10100 y"
b10011 s"
b10010 m"
b10001 g"
b10000 a"
b1111 ["
b1110 U"
b1101 O"
b1100 I"
b1011 C"
b1010 ="
b1001 7"
b1000 1"
b111 +"
b110 %"
b101 }
b100 w
b11 q
b10 k
b1 e
b0 `
b100 J
b11 I
b0 H
b1 G
b10 F
$end
#0
$dumpvars
bx =&
bx <&
bx ;&
bx +&
bx *&
bx )&
bx }%
bx |%
x{%
xz%
xy%
xx%
xw%
xu%
xt%
xs%
xr%
xq%
xo%
xn%
xm%
xl%
xk%
xi%
xh%
xg%
xf%
xe%
xc%
xb%
xa%
x`%
x_%
x]%
x\%
x[%
xZ%
xY%
xW%
xV%
xU%
xT%
xS%
xQ%
xP%
xO%
xN%
xM%
xK%
xJ%
xI%
xH%
xG%
xE%
xD%
xC%
xB%
xA%
x?%
x>%
x=%
x<%
x;%
x9%
x8%
x7%
x6%
x5%
x3%
x2%
x1%
x0%
x/%
x-%
x,%
x+%
x*%
x)%
x'%
x&%
x%%
x$%
x#%
x!%
x~$
x}$
x|$
x{$
xy$
xx$
xw$
xv$
xu$
xs$
xr$
xq$
xp$
xo$
xm$
xl$
xk$
xj$
xi$
xg$
xf$
xe$
xd$
xc$
xa$
x`$
x_$
x^$
x]$
x[$
xZ$
xY$
xX$
xW$
xU$
xT$
xS$
xR$
xQ$
xO$
xN$
xM$
xL$
xK$
xI$
xH$
xG$
xF$
xE$
xC$
xB$
xA$
x@$
x?$
x=$
x<$
x;$
x:$
x9$
x7$
x6$
x5$
x4$
x3$
x1$
x0$
x/$
x.$
x-$
x+$
x*$
x)$
x($
x'$
x%$
x$$
x#$
x"$
x!$
x}#
x|#
x{#
xz#
bx x#
bx w#
bx v#
bx u#
bx t#
bx s#
bx r#
bx q#
xp#
bx o#
xn#
bx m#
bx l#
bx k#
bx j#
b100000 i#
bx h#
bx g#
bx f#
bx e#
bx d#
bx c#
xb#
xa#
x`#
x_#
x^#
x\#
x[#
xZ#
xY#
xX#
xV#
xU#
xT#
xS#
xR#
xP#
xO#
xN#
xM#
xL#
xJ#
xI#
xH#
xG#
xF#
xD#
xC#
xB#
xA#
x@#
x>#
x=#
x<#
x;#
x:#
x8#
x7#
x6#
x5#
x4#
x2#
x1#
x0#
x/#
x.#
x,#
x+#
x*#
x)#
x(#
x&#
x%#
x$#
x##
x"#
x~"
x}"
x|"
x{"
xz"
xx"
xw"
xv"
xu"
xt"
xr"
xq"
xp"
xo"
xn"
xl"
xk"
xj"
xi"
xh"
xf"
xe"
xd"
xc"
xb"
x`"
x_"
x^"
x]"
x\"
xZ"
xY"
xX"
xW"
xV"
xT"
xS"
xR"
xQ"
xP"
xN"
xM"
xL"
xK"
xJ"
xH"
xG"
xF"
xE"
xD"
xB"
xA"
x@"
x?"
x>"
x<"
x;"
x:"
x9"
x8"
x6"
x5"
x4"
x3"
x2"
x0"
x/"
x."
x-"
x,"
x*"
x)"
x("
x'"
x&"
x$"
x#"
x""
x!"
x~
x|
x{
xz
xy
xx
xv
xu
xt
xs
xr
xp
xo
xn
xm
xl
xj
xi
xh
xg
xf
xd
xc
xb
xa
bx _
bx ^
bx ]
bx \
0[
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
xQ
bx P
bx O
xN
bx M
xL
bx K
bx E
bx D
xC
bx B
xA
x@
x?
x>
x=
x<
x;
bx :
bx 9
b0xxxxxxxxxxxxxxxx 8
bx 7
bx 6
x5
x4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
x*
bx )
1(
x'
0&
bx %
bx $
x#
bx "
1!
$end
#10000
0N
b0 X
1&
#20000
1*
b0 /
b0 r#
0v
0r
0m
0j
1p
0|
0$"
0*"
00"
06"
0<"
0B"
0H"
0N"
0T"
0Z"
0`"
0f"
0l"
0r"
0x"
0~"
0&#
0,#
02#
08#
0>#
0D#
0J#
0P#
0V#
0\#
0b#
04
0f
0l
0x
0~
0&"
0,"
02"
08"
0>"
0D"
0J"
0P"
0V"
0\"
0b"
0h"
0n"
0t"
0z"
0"#
0(#
0.#
04#
0:#
0@#
0F#
0L#
0R#
0X#
0^#
b100 3
b100 \
b100 ]
0d
0a
0g
0s
0y
0!"
0'"
0-"
03"
09"
0?"
0E"
0K"
0Q"
0W"
0]"
0c"
0i"
0o"
0u"
0{"
0##
0)#
0/#
05#
0;#
0A#
0G#
0M#
0S#
0Y#
b0 _
0_#
0a#
0[#
0U#
0O#
0I#
0C#
0=#
07#
01#
0+#
0%#
0}"
0w"
0q"
0k"
0e"
0_"
0Y"
0S"
0M"
0G"
0A"
0;"
05"
0/"
0)"
0#"
0{
0u
1o
0i
0c
0{#
0#$
0)$
0/$
05$
0;$
0A$
0G$
0M$
0S$
0Y$
0_$
0e$
0k$
0q$
0w$
0}$
0%%
0+%
01%
07%
0=%
0C%
0I%
0O%
0U%
0[%
0a%
0g%
0m%
0s%
0y%
b100 ^
0b
0h
0n
0t
0z
0""
0("
0."
04"
0:"
0@"
0F"
0L"
0R"
0X"
0^"
0d"
0j"
0p"
0v"
0|"
0$#
0*#
00#
06#
0<#
0B#
0H#
0N#
0T#
0Z#
0`#
b100010001100010000000000000000 :
b100010001100010000000000000000 <&
b0 S
b0 k#
b0 R
b0 j#
b0 s#
b0 K
z#
b100 M
b100 Z
b0 V
b0 Y
b0 =&
0(
0&
#30000
1&
#40000
0&
#50000
1&
#60000
0&
#70000
1&
#80000
1!
1(
0&
#90000
1;
0=
0<
0>
0A
0@
0?
b1 B
b1 ;&
1C
b10001 0
b10001 h#
b10001 1
b10001 g#
b10001 .
b10001 e#
b110 *&
b1000 6
b1000 +&
b10001 -
b10001 c#
b10001 ,
b10001 d#
b0 2
b0 8
b0 E
b10001100010000000000000000 7
b0 +
b0 9
b0 }%
b1 X
b100010001100010000000000000000 U
1&
#100000
0&
#110000
x*
bx /
bx r#
0=$
09$
04$
05
0%$
0p#
0{%
0u%
0o%
0i%
0c%
0]%
0W%
0Q%
0K%
0E%
0?%
09%
03%
0-%
0'%
0!%
0y$
0s$
0m$
0g$
0a$
0[$
0U$
0O$
0I$
0C$
17$
01$
0+$
0!$
0w%
0q%
0k%
0e%
0_%
0Y%
0S%
0M%
0G%
0A%
0;%
05%
0/%
0)%
0#%
0{$
0u$
0o$
0i$
0c$
0]$
0W$
0Q$
0K$
0E$
0?$
03$
0-$
0'$
0z#
0x%
0r%
0l%
0f%
0`%
0Z%
0T%
0N%
0H%
0B%
0<%
06%
00%
0*%
0$%
0|$
0v$
0p$
0j$
0d$
0^$
0X$
0R$
0L$
0F$
0@$
0:$
0.$
0($
b0 x#
0"$
b10001 m#
b10001 u#
b10001 v#
1}#
0z%
0t%
0n%
0h%
0b%
0\%
0V%
0P%
0J%
0D%
0>%
08%
02%
0,%
0&%
0~$
0x$
0r$
0l$
0f$
0`$
0Z$
0T$
0N$
0H$
0B$
0<$
06$
00$
0*$
0$$
0|#
b0 w#
0n#
1{#
15$
b0 o#
b0 t#
b0 D
b0 q#
b0 )&
b10 X
b0 T
b0 l#
b10001 S
b10001 k#
b10001 R
b10001 j#
b10001 s#
1Q
b1 P
b1 |%
1&
#120000
0&
#130000
b100 X
1&
#140000
0&
