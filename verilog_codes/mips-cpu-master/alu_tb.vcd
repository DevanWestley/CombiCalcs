$date
	Fri Mar 21 13:33:51 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 1 ! zero $end
$var wire 32 " result [31:0] $end
$var wire 1 # overflow $end
$var reg 4 $ aluCtrl [3:0] $end
$var reg 1 % aluSrc $end
$var reg 32 & data1 [31:0] $end
$var reg 32 ' data2 [31:0] $end
$var reg 32 ( imm [31:0] $end
$scope module uut $end
$var wire 4 ) aluCtrl [3:0] $end
$var wire 1 % aluSrc $end
$var wire 32 * data1 [31:0] $end
$var wire 32 + data2 [31:0] $end
$var wire 32 , imm [31:0] $end
$var wire 1 ! zero $end
$var wire 32 - sum [31:0] $end
$var wire 1 # overflow $end
$var wire 1 . op $end
$var wire 32 / d2 [31:0] $end
$var wire 1 0 carry $end
$var reg 32 1 result [31:0] $end
$scope module addsub $end
$var wire 32 2 num1 [31:0] $end
$var wire 32 3 num2 [31:0] $end
$var wire 1 . op $end
$var wire 32 4 sumO [31:0] $end
$var wire 32 5 sum [31:0] $end
$var wire 32 6 num2C [31:0] $end
$var wire 1 0 carryO $end
$var wire 32 7 carry [31:0] $end
$scope begin genblk1[0] $end
$var parameter 2 8 i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 . carryI $end
$var wire 1 9 carryO $end
$var wire 1 : num1 $end
$var wire 1 ; num2 $end
$var wire 1 < sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 = i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 > carryI $end
$var wire 1 ? carryO $end
$var wire 1 @ num1 $end
$var wire 1 A num2 $end
$var wire 1 B sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 C i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 D carryI $end
$var wire 1 E carryO $end
$var wire 1 F num1 $end
$var wire 1 G num2 $end
$var wire 1 H sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 I i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 J carryI $end
$var wire 1 K carryO $end
$var wire 1 L num1 $end
$var wire 1 M num2 $end
$var wire 1 N sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 O i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 P carryI $end
$var wire 1 Q carryO $end
$var wire 1 R num1 $end
$var wire 1 S num2 $end
$var wire 1 T sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 U i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 V carryI $end
$var wire 1 W carryO $end
$var wire 1 X num1 $end
$var wire 1 Y num2 $end
$var wire 1 Z sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 [ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 \ carryI $end
$var wire 1 ] carryO $end
$var wire 1 ^ num1 $end
$var wire 1 _ num2 $end
$var wire 1 ` sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 a i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 b carryI $end
$var wire 1 c carryO $end
$var wire 1 d num1 $end
$var wire 1 e num2 $end
$var wire 1 f sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 g i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 h carryI $end
$var wire 1 i carryO $end
$var wire 1 j num1 $end
$var wire 1 k num2 $end
$var wire 1 l sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 m i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 n carryI $end
$var wire 1 o carryO $end
$var wire 1 p num1 $end
$var wire 1 q num2 $end
$var wire 1 r sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 s i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 t carryI $end
$var wire 1 u carryO $end
$var wire 1 v num1 $end
$var wire 1 w num2 $end
$var wire 1 x sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 y i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 z carryI $end
$var wire 1 { carryO $end
$var wire 1 | num1 $end
$var wire 1 } num2 $end
$var wire 1 ~ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 !" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 "" carryI $end
$var wire 1 #" carryO $end
$var wire 1 $" num1 $end
$var wire 1 %" num2 $end
$var wire 1 &" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 '" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 (" carryI $end
$var wire 1 )" carryO $end
$var wire 1 *" num1 $end
$var wire 1 +" num2 $end
$var wire 1 ," sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 -" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 ." carryI $end
$var wire 1 /" carryO $end
$var wire 1 0" num1 $end
$var wire 1 1" num2 $end
$var wire 1 2" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 3" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 4" carryI $end
$var wire 1 5" carryO $end
$var wire 1 6" num1 $end
$var wire 1 7" num2 $end
$var wire 1 8" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 9" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 :" carryI $end
$var wire 1 ;" carryO $end
$var wire 1 <" num1 $end
$var wire 1 =" num2 $end
$var wire 1 >" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 ?" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 @" carryI $end
$var wire 1 A" carryO $end
$var wire 1 B" num1 $end
$var wire 1 C" num2 $end
$var wire 1 D" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 E" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 F" carryI $end
$var wire 1 G" carryO $end
$var wire 1 H" num1 $end
$var wire 1 I" num2 $end
$var wire 1 J" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 K" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 L" carryI $end
$var wire 1 M" carryO $end
$var wire 1 N" num1 $end
$var wire 1 O" num2 $end
$var wire 1 P" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 Q" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 R" carryI $end
$var wire 1 S" carryO $end
$var wire 1 T" num1 $end
$var wire 1 U" num2 $end
$var wire 1 V" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 W" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 X" carryI $end
$var wire 1 Y" carryO $end
$var wire 1 Z" num1 $end
$var wire 1 [" num2 $end
$var wire 1 \" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 ]" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 ^" carryI $end
$var wire 1 _" carryO $end
$var wire 1 `" num1 $end
$var wire 1 a" num2 $end
$var wire 1 b" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 c" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 d" carryI $end
$var wire 1 e" carryO $end
$var wire 1 f" num1 $end
$var wire 1 g" num2 $end
$var wire 1 h" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 i" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 j" carryI $end
$var wire 1 k" carryO $end
$var wire 1 l" num1 $end
$var wire 1 m" num2 $end
$var wire 1 n" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 o" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 p" carryI $end
$var wire 1 q" carryO $end
$var wire 1 r" num1 $end
$var wire 1 s" num2 $end
$var wire 1 t" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 u" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 v" carryI $end
$var wire 1 w" carryO $end
$var wire 1 x" num1 $end
$var wire 1 y" num2 $end
$var wire 1 z" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 {" i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 |" carryI $end
$var wire 1 }" carryO $end
$var wire 1 ~" num1 $end
$var wire 1 !# num2 $end
$var wire 1 "# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 ## i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 $# carryI $end
$var wire 1 %# carryO $end
$var wire 1 &# num1 $end
$var wire 1 '# num2 $end
$var wire 1 (# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 )# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 *# carryI $end
$var wire 1 +# carryO $end
$var wire 1 ,# num1 $end
$var wire 1 -# num2 $end
$var wire 1 .# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 /# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 0# carryI $end
$var wire 1 1# carryO $end
$var wire 1 2# num1 $end
$var wire 1 3# num2 $end
$var wire 1 4# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 5# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 6# carryI $end
$var wire 1 7# carryO $end
$var wire 1 8# num1 $end
$var wire 1 9# num2 $end
$var wire 1 :# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_TB $end
$var event 1 ;# reset_done $end
$var wire 32 <# dataBus [31:0] $end
$var wire 1 =# memRWPin $end
$var wire 32 ># addressBus [31:0] $end
$var reg 32 ?# MemData [31:0] $end
$var reg 1 @# clk $end
$var reg 1 A# memOpDone $end
$var reg 1 B# reset $end
$scope module MipsCpu $end
$var wire 1 @# clk $end
$var wire 32 C# dataBus [31:0] $end
$var wire 1 A# memOpDone $end
$var wire 1 B# reset $end
$var wire 1 D# zero $end
$var wire 5 E# sa [4:0] $end
$var wire 5 F# rt [4:0] $end
$var wire 5 G# rs [4:0] $end
$var wire 5 H# rgw [4:0] $end
$var wire 32 I# result [31:0] $end
$var wire 32 J# rdata2 [31:0] $end
$var wire 32 K# rdata1 [31:0] $end
$var wire 5 L# rd [4:0] $end
$var wire 32 M# pc_next [31:0] $end
$var wire 1 N# pcOverflow $end
$var wire 1 O# overflow $end
$var wire 6 P# opcode [5:0] $end
$var wire 26 Q# instidx [25:0] $end
$var wire 32 R# immediate [31:0] $end
$var wire 6 S# fn [5:0] $end
$var wire 32 T# fetchedInst [31:0] $end
$var wire 1 U# contRegWrite $end
$var wire 1 V# contMemtoReg $end
$var wire 1 W# contMemWrite $end
$var wire 1 X# contMemRead $end
$var wire 1 Y# contJmp $end
$var wire 1 Z# contDstReg $end
$var wire 1 [# contBranch $end
$var wire 2 \# contAluop [1:0] $end
$var wire 1 ]# contALUSrc $end
$var wire 4 ^# aluCtrl [3:0] $end
$var wire 16 _# addrim [15:0] $end
$var parameter 3 `# EX $end
$var parameter 3 a# ID $end
$var parameter 3 b# IF $end
$var parameter 3 c# MEM $end
$var parameter 3 d# WB $end
$var reg 32 e# MemData [31:0] $end
$var reg 1 f# MemopInProg $end
$var reg 32 g# NextAdd [31:0] $end
$var reg 1 h# RegWrite $end
$var reg 32 i# addressBus [31:0] $end
$var reg 2 j# aluOp [1:0] $end
$var reg 1 k# aluSrc $end
$var reg 32 l# data1 [31:0] $end
$var reg 32 m# data2 [31:0] $end
$var reg 32 n# imm [31:0] $end
$var reg 32 o# instruction [31:0] $end
$var reg 1 =# memRWPin $end
$var reg 32 p# pc [31:0] $end
$var reg 32 q# rgwdata [31:0] $end
$var reg 3 r# stage [2:0] $end
$scope module NexTinst $end
$var wire 32 s# num1 [31:0] $end
$var wire 32 t# num2 [31:0] $end
$var wire 1 u# op $end
$var wire 32 v# sumO [31:0] $end
$var wire 32 w# sum [31:0] $end
$var wire 32 x# num2C [31:0] $end
$var wire 1 N# carryO $end
$var wire 32 y# carry [31:0] $end
$scope begin genblk1[0] $end
$var parameter 2 z# i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 u# carryI $end
$var wire 1 {# carryO $end
$var wire 1 |# num1 $end
$var wire 1 }# num2 $end
$var wire 1 ~# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 !$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 "$ carryI $end
$var wire 1 #$ carryO $end
$var wire 1 $$ num1 $end
$var wire 1 %$ num2 $end
$var wire 1 &$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 '$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 ($ carryI $end
$var wire 1 )$ carryO $end
$var wire 1 *$ num1 $end
$var wire 1 +$ num2 $end
$var wire 1 ,$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 -$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 .$ carryI $end
$var wire 1 /$ carryO $end
$var wire 1 0$ num1 $end
$var wire 1 1$ num2 $end
$var wire 1 2$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 3$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 4$ carryI $end
$var wire 1 5$ carryO $end
$var wire 1 6$ num1 $end
$var wire 1 7$ num2 $end
$var wire 1 8$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 9$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 :$ carryI $end
$var wire 1 ;$ carryO $end
$var wire 1 <$ num1 $end
$var wire 1 =$ num2 $end
$var wire 1 >$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 ?$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 @$ carryI $end
$var wire 1 A$ carryO $end
$var wire 1 B$ num1 $end
$var wire 1 C$ num2 $end
$var wire 1 D$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 E$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 F$ carryI $end
$var wire 1 G$ carryO $end
$var wire 1 H$ num1 $end
$var wire 1 I$ num2 $end
$var wire 1 J$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 K$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 L$ carryI $end
$var wire 1 M$ carryO $end
$var wire 1 N$ num1 $end
$var wire 1 O$ num2 $end
$var wire 1 P$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 Q$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 R$ carryI $end
$var wire 1 S$ carryO $end
$var wire 1 T$ num1 $end
$var wire 1 U$ num2 $end
$var wire 1 V$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 W$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 X$ carryI $end
$var wire 1 Y$ carryO $end
$var wire 1 Z$ num1 $end
$var wire 1 [$ num2 $end
$var wire 1 \$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 ]$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 ^$ carryI $end
$var wire 1 _$ carryO $end
$var wire 1 `$ num1 $end
$var wire 1 a$ num2 $end
$var wire 1 b$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 c$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 d$ carryI $end
$var wire 1 e$ carryO $end
$var wire 1 f$ num1 $end
$var wire 1 g$ num2 $end
$var wire 1 h$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 i$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 j$ carryI $end
$var wire 1 k$ carryO $end
$var wire 1 l$ num1 $end
$var wire 1 m$ num2 $end
$var wire 1 n$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 o$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 p$ carryI $end
$var wire 1 q$ carryO $end
$var wire 1 r$ num1 $end
$var wire 1 s$ num2 $end
$var wire 1 t$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 u$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 v$ carryI $end
$var wire 1 w$ carryO $end
$var wire 1 x$ num1 $end
$var wire 1 y$ num2 $end
$var wire 1 z$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 {$ i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 |$ carryI $end
$var wire 1 }$ carryO $end
$var wire 1 ~$ num1 $end
$var wire 1 !% num2 $end
$var wire 1 "% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 #% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 $% carryI $end
$var wire 1 %% carryO $end
$var wire 1 &% num1 $end
$var wire 1 '% num2 $end
$var wire 1 (% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 )% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 *% carryI $end
$var wire 1 +% carryO $end
$var wire 1 ,% num1 $end
$var wire 1 -% num2 $end
$var wire 1 .% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 /% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 0% carryI $end
$var wire 1 1% carryO $end
$var wire 1 2% num1 $end
$var wire 1 3% num2 $end
$var wire 1 4% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 5% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 6% carryI $end
$var wire 1 7% carryO $end
$var wire 1 8% num1 $end
$var wire 1 9% num2 $end
$var wire 1 :% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 ;% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 <% carryI $end
$var wire 1 =% carryO $end
$var wire 1 >% num1 $end
$var wire 1 ?% num2 $end
$var wire 1 @% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 A% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 B% carryI $end
$var wire 1 C% carryO $end
$var wire 1 D% num1 $end
$var wire 1 E% num2 $end
$var wire 1 F% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 G% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 H% carryI $end
$var wire 1 I% carryO $end
$var wire 1 J% num1 $end
$var wire 1 K% num2 $end
$var wire 1 L% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 M% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 N% carryI $end
$var wire 1 O% carryO $end
$var wire 1 P% num1 $end
$var wire 1 Q% num2 $end
$var wire 1 R% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 S% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 T% carryI $end
$var wire 1 U% carryO $end
$var wire 1 V% num1 $end
$var wire 1 W% num2 $end
$var wire 1 X% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 Y% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 Z% carryI $end
$var wire 1 [% carryO $end
$var wire 1 \% num1 $end
$var wire 1 ]% num2 $end
$var wire 1 ^% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 _% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 `% carryI $end
$var wire 1 a% carryO $end
$var wire 1 b% num1 $end
$var wire 1 c% num2 $end
$var wire 1 d% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 e% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 f% carryI $end
$var wire 1 g% carryO $end
$var wire 1 h% num1 $end
$var wire 1 i% num2 $end
$var wire 1 j% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 k% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 l% carryI $end
$var wire 1 m% carryO $end
$var wire 1 n% num1 $end
$var wire 1 o% num2 $end
$var wire 1 p% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 q% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 r% carryI $end
$var wire 1 s% carryO $end
$var wire 1 t% num1 $end
$var wire 1 u% num2 $end
$var wire 1 v% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 w% i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 x% carryI $end
$var wire 1 y% carryO $end
$var wire 1 z% num1 $end
$var wire 1 {% num2 $end
$var wire 1 |% sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module RegisterFile $end
$var wire 5 }% rgr1 [4:0] $end
$var wire 5 ~% rgr2 [4:0] $end
$var wire 5 !& rgw1 [4:0] $end
$var wire 32 "& rgw1data [31:0] $end
$var wire 1 h# write $end
$var reg 32 #& rg1data [31:0] $end
$var reg 32 $& rg2data [31:0] $end
$var integer 32 %& i [31:0] $end
$upscope $end
$scope module alu $end
$var wire 1 k# aluSrc $end
$var wire 32 && data1 [31:0] $end
$var wire 32 '& data2 [31:0] $end
$var wire 32 (& imm [31:0] $end
$var wire 1 D# zero $end
$var wire 32 )& sum [31:0] $end
$var wire 1 O# overflow $end
$var wire 1 *& op $end
$var wire 32 +& d2 [31:0] $end
$var wire 1 ,& carry $end
$var wire 4 -& aluCtrl [3:0] $end
$var reg 32 .& result [31:0] $end
$scope module addsub $end
$var wire 32 /& num1 [31:0] $end
$var wire 32 0& num2 [31:0] $end
$var wire 1 *& op $end
$var wire 32 1& sumO [31:0] $end
$var wire 32 2& sum [31:0] $end
$var wire 32 3& num2C [31:0] $end
$var wire 1 ,& carryO $end
$var wire 32 4& carry [31:0] $end
$scope begin genblk1[0] $end
$var parameter 2 5& i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 *& carryI $end
$var wire 1 6& carryO $end
$var wire 1 7& num1 $end
$var wire 1 8& num2 $end
$var wire 1 9& sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 :& i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 ;& carryI $end
$var wire 1 <& carryO $end
$var wire 1 =& num1 $end
$var wire 1 >& num2 $end
$var wire 1 ?& sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 @& i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 A& carryI $end
$var wire 1 B& carryO $end
$var wire 1 C& num1 $end
$var wire 1 D& num2 $end
$var wire 1 E& sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 F& i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 G& carryI $end
$var wire 1 H& carryO $end
$var wire 1 I& num1 $end
$var wire 1 J& num2 $end
$var wire 1 K& sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 L& i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 M& carryI $end
$var wire 1 N& carryO $end
$var wire 1 O& num1 $end
$var wire 1 P& num2 $end
$var wire 1 Q& sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 R& i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 S& carryI $end
$var wire 1 T& carryO $end
$var wire 1 U& num1 $end
$var wire 1 V& num2 $end
$var wire 1 W& sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 X& i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 Y& carryI $end
$var wire 1 Z& carryO $end
$var wire 1 [& num1 $end
$var wire 1 \& num2 $end
$var wire 1 ]& sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 ^& i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 _& carryI $end
$var wire 1 `& carryO $end
$var wire 1 a& num1 $end
$var wire 1 b& num2 $end
$var wire 1 c& sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 d& i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 e& carryI $end
$var wire 1 f& carryO $end
$var wire 1 g& num1 $end
$var wire 1 h& num2 $end
$var wire 1 i& sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 j& i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 k& carryI $end
$var wire 1 l& carryO $end
$var wire 1 m& num1 $end
$var wire 1 n& num2 $end
$var wire 1 o& sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 p& i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 q& carryI $end
$var wire 1 r& carryO $end
$var wire 1 s& num1 $end
$var wire 1 t& num2 $end
$var wire 1 u& sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 v& i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 w& carryI $end
$var wire 1 x& carryO $end
$var wire 1 y& num1 $end
$var wire 1 z& num2 $end
$var wire 1 {& sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 |& i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 }& carryI $end
$var wire 1 ~& carryO $end
$var wire 1 !' num1 $end
$var wire 1 "' num2 $end
$var wire 1 #' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 $' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 %' carryI $end
$var wire 1 &' carryO $end
$var wire 1 '' num1 $end
$var wire 1 (' num2 $end
$var wire 1 )' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 *' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 +' carryI $end
$var wire 1 ,' carryO $end
$var wire 1 -' num1 $end
$var wire 1 .' num2 $end
$var wire 1 /' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 0' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 1' carryI $end
$var wire 1 2' carryO $end
$var wire 1 3' num1 $end
$var wire 1 4' num2 $end
$var wire 1 5' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 6' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 7' carryI $end
$var wire 1 8' carryO $end
$var wire 1 9' num1 $end
$var wire 1 :' num2 $end
$var wire 1 ;' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 <' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 =' carryI $end
$var wire 1 >' carryO $end
$var wire 1 ?' num1 $end
$var wire 1 @' num2 $end
$var wire 1 A' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 B' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 C' carryI $end
$var wire 1 D' carryO $end
$var wire 1 E' num1 $end
$var wire 1 F' num2 $end
$var wire 1 G' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 H' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 I' carryI $end
$var wire 1 J' carryO $end
$var wire 1 K' num1 $end
$var wire 1 L' num2 $end
$var wire 1 M' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 N' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 O' carryI $end
$var wire 1 P' carryO $end
$var wire 1 Q' num1 $end
$var wire 1 R' num2 $end
$var wire 1 S' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 T' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 U' carryI $end
$var wire 1 V' carryO $end
$var wire 1 W' num1 $end
$var wire 1 X' num2 $end
$var wire 1 Y' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 Z' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 [' carryI $end
$var wire 1 \' carryO $end
$var wire 1 ]' num1 $end
$var wire 1 ^' num2 $end
$var wire 1 _' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 `' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 a' carryI $end
$var wire 1 b' carryO $end
$var wire 1 c' num1 $end
$var wire 1 d' num2 $end
$var wire 1 e' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 f' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 g' carryI $end
$var wire 1 h' carryO $end
$var wire 1 i' num1 $end
$var wire 1 j' num2 $end
$var wire 1 k' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 l' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 m' carryI $end
$var wire 1 n' carryO $end
$var wire 1 o' num1 $end
$var wire 1 p' num2 $end
$var wire 1 q' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 r' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 s' carryI $end
$var wire 1 t' carryO $end
$var wire 1 u' num1 $end
$var wire 1 v' num2 $end
$var wire 1 w' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 x' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 y' carryI $end
$var wire 1 z' carryO $end
$var wire 1 {' num1 $end
$var wire 1 |' num2 $end
$var wire 1 }' sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 ~' i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 !( carryI $end
$var wire 1 "( carryO $end
$var wire 1 #( num1 $end
$var wire 1 $( num2 $end
$var wire 1 %( sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 &( i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 '( carryI $end
$var wire 1 (( carryO $end
$var wire 1 )( num1 $end
$var wire 1 *( num2 $end
$var wire 1 +( sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 ,( i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 -( carryI $end
$var wire 1 .( carryO $end
$var wire 1 /( num1 $end
$var wire 1 0( num2 $end
$var wire 1 1( sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 2( i $end
$scope begin genblk1 $end
$scope module addr $end
$var wire 1 3( carryI $end
$var wire 1 4( carryO $end
$var wire 1 5( num1 $end
$var wire 1 6( num2 $end
$var wire 1 7( sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module aluControl $end
$var wire 2 8( aluOp [1:0] $end
$var wire 6 9( fn [5:0] $end
$var parameter 6 :( ADDFN $end
$var parameter 6 ;( ADDUFN $end
$var parameter 6 <( ANDFN $end
$var parameter 6 =( ORFN $end
$var parameter 6 >( SLLFN $end
$var parameter 6 ?( SLTFN $end
$var parameter 6 @( SRLFN $end
$var parameter 6 A( SUBFN $end
$var parameter 6 B( SUBUFN $end
$var reg 4 C( aluCtrl [3:0] $end
$var reg 4 D( fno [3:0] $end
$upscope $end
$scope module controlUnit $end
$var wire 6 E( opcode [5:0] $end
$var parameter 6 F( ADD $end
$var parameter 6 G( ADDI $end
$var parameter 6 H( ADDU $end
$var parameter 6 I( AND $end
$var parameter 6 J( BEQ $end
$var parameter 6 K( BNE $end
$var parameter 6 L( J $end
$var parameter 6 M( LW $end
$var parameter 6 N( OR $end
$var parameter 6 O( SLL $end
$var parameter 6 P( SLT $end
$var parameter 6 Q( SRL $end
$var parameter 6 R( SUB $end
$var parameter 6 S( SUBU $end
$var parameter 6 T( SW $end
$var reg 1 ]# ALUSrc $end
$var reg 2 U( ALUop [1:0] $end
$var reg 1 X# MemRead $end
$var reg 1 W# MemWrite $end
$var reg 1 V# MemtoReg $end
$var reg 1 U# RegWrite $end
$var reg 1 [# branch $end
$var reg 1 Z# dstReg $end
$var reg 1 Y# jmp $end
$upscope $end
$scope module fetchIns $end
$var wire 32 V( instruction [31:0] $end
$var wire 32 W( pc [31:0] $end
$var parameter 56 X( IM_DATA $end
$var parameter 32 Y( NMEM $end
$upscope $end
$upscope $end
$scope task rst $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1111 Y(
b1001001010011010010111001101101011010010111000001110011 X(
b101011 T(
b0 S(
b0 R(
b0 Q(
b0 P(
b0 O(
b0 N(
b100011 M(
b10 L(
b101 K(
b100 J(
b0 I(
b0 H(
b1000 G(
b0 F(
b100011 B(
b100010 A(
b10 @(
b101010 ?(
b0 >(
b100101 =(
b100100 <(
b100001 ;(
b100000 :(
b11111 2(
b11110 ,(
b11101 &(
b11100 ~'
b11011 x'
b11010 r'
b11001 l'
b11000 f'
b10111 `'
b10110 Z'
b10101 T'
b10100 N'
b10011 H'
b10010 B'
b10001 <'
b10000 6'
b1111 0'
b1110 *'
b1101 $'
b1100 |&
b1011 v&
b1010 p&
b1001 j&
b1000 d&
b111 ^&
b110 X&
b101 R&
b100 L&
b11 F&
b10 @&
b1 :&
b0 5&
b11111 w%
b11110 q%
b11101 k%
b11100 e%
b11011 _%
b11010 Y%
b11001 S%
b11000 M%
b10111 G%
b10110 A%
b10101 ;%
b10100 5%
b10011 /%
b10010 )%
b10001 #%
b10000 {$
b1111 u$
b1110 o$
b1101 i$
b1100 c$
b1011 ]$
b1010 W$
b1001 Q$
b1000 K$
b111 E$
b110 ?$
b101 9$
b100 3$
b11 -$
b10 '$
b1 !$
b0 z#
b100 d#
b11 c#
b0 b#
b1 a#
b10 `#
b11111 5#
b11110 /#
b11101 )#
b11100 ##
b11011 {"
b11010 u"
b11001 o"
b11000 i"
b10111 c"
b10110 ]"
b10101 W"
b10100 Q"
b10011 K"
b10010 E"
b10001 ?"
b10000 9"
b1111 3"
b1110 -"
b1101 '"
b1100 !"
b1011 y
b1010 s
b1001 m
b1000 g
b111 a
b110 [
b101 U
b100 O
b11 I
b10 C
b1 =
b0 8
$end
#0
$dumpvars
bx W(
bx V(
bx U(
bx E(
bx D(
bx C(
bx 9(
bx 8(
x7(
x6(
x5(
x4(
x3(
x1(
x0(
x/(
x.(
x-(
x+(
x*(
x)(
x((
x'(
x%(
x$(
x#(
x"(
x!(
x}'
x|'
x{'
xz'
xy'
xw'
xv'
xu'
xt'
xs'
xq'
xp'
xo'
xn'
xm'
xk'
xj'
xi'
xh'
xg'
xe'
xd'
xc'
xb'
xa'
x_'
x^'
x]'
x\'
x['
xY'
xX'
xW'
xV'
xU'
xS'
xR'
xQ'
xP'
xO'
xM'
xL'
xK'
xJ'
xI'
xG'
xF'
xE'
xD'
xC'
xA'
x@'
x?'
x>'
x='
x;'
x:'
x9'
x8'
x7'
x5'
x4'
x3'
x2'
x1'
x/'
x.'
x-'
x,'
x+'
x)'
x('
x''
x&'
x%'
x#'
x"'
x!'
x~&
x}&
x{&
xz&
xy&
xx&
xw&
xu&
xt&
xs&
xr&
xq&
xo&
xn&
xm&
xl&
xk&
xi&
xh&
xg&
xf&
xe&
xc&
xb&
xa&
x`&
x_&
x]&
x\&
x[&
xZ&
xY&
xW&
xV&
xU&
xT&
xS&
xQ&
xP&
xO&
xN&
xM&
xK&
xJ&
xI&
xH&
xG&
xE&
xD&
xC&
xB&
xA&
x?&
x>&
x=&
x<&
x;&
x9&
x8&
x7&
x6&
bx 4&
bx 3&
bx 2&
bx 1&
bx 0&
bx /&
bx .&
bx -&
x,&
bx +&
x*&
bx )&
bx (&
bx '&
bx &&
b100000 %&
bx $&
bx #&
bx "&
bx !&
bx ~%
bx }%
x|%
x{%
xz%
xy%
xx%
xv%
xu%
xt%
xs%
xr%
xp%
xo%
xn%
xm%
xl%
xj%
xi%
xh%
xg%
xf%
xd%
xc%
xb%
xa%
x`%
x^%
x]%
x\%
x[%
xZ%
xX%
xW%
xV%
xU%
xT%
xR%
xQ%
xP%
xO%
xN%
xL%
xK%
xJ%
xI%
xH%
xF%
xE%
xD%
xC%
xB%
x@%
x?%
x>%
x=%
x<%
x:%
x9%
x8%
x7%
x6%
x4%
x3%
x2%
x1%
x0%
x.%
x-%
x,%
x+%
x*%
x(%
x'%
x&%
x%%
x$%
x"%
x!%
x~$
x}$
x|$
xz$
xy$
xx$
xw$
xv$
xt$
xs$
xr$
xq$
xp$
xn$
xm$
xl$
xk$
xj$
xh$
xg$
xf$
xe$
xd$
xb$
xa$
x`$
x_$
x^$
x\$
x[$
xZ$
xY$
xX$
xV$
xU$
xT$
xS$
xR$
xP$
xO$
xN$
xM$
xL$
xJ$
xI$
xH$
xG$
xF$
xD$
xC$
xB$
xA$
x@$
x>$
x=$
x<$
x;$
x:$
x8$
x7$
x6$
x5$
x4$
x2$
x1$
x0$
x/$
x.$
x,$
x+$
x*$
x)$
x($
x&$
x%$
x$$
x#$
x"$
x~#
x}#
x|#
x{#
bx y#
bx x#
bx w#
bx v#
0u#
bx t#
bx s#
bx r#
bx q#
bx p#
bx o#
bx n#
bx m#
bx l#
xk#
bx j#
bx i#
xh#
bx g#
xf#
bx e#
bx _#
bx ^#
x]#
bx \#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
bx T#
bx S#
b0xxxxxxxxxxxxxxxx R#
bx Q#
bx P#
xO#
xN#
bx M#
bx L#
bx K#
bx J#
bx I#
bx H#
bx G#
bx F#
bx E#
xD#
bx C#
1B#
xA#
0@#
bx ?#
bx >#
x=#
bx <#
1;#
0:#
09#
08#
07#
06#
04#
03#
02#
01#
00#
0.#
0-#
0,#
0+#
0*#
0(#
0'#
0&#
0%#
0$#
0"#
0!#
0~"
0}"
0|"
0z"
0y"
0x"
0w"
0v"
0t"
0s"
0r"
0q"
0p"
0n"
0m"
0l"
0k"
0j"
0h"
0g"
0f"
0e"
0d"
0b"
0a"
0`"
0_"
0^"
0\"
0["
0Z"
0Y"
0X"
0V"
0U"
0T"
0S"
0R"
0P"
0O"
0N"
0M"
0L"
0J"
0I"
0H"
0G"
0F"
0D"
0C"
0B"
0A"
0@"
0>"
0="
0<"
0;"
0:"
08"
07"
06"
05"
04"
02"
01"
00"
0/"
0."
0,"
0+"
0*"
0)"
0("
0&"
0%"
0$"
0#"
0""
0~
0}
0|
0{
0z
0x
0w
0v
0u
0t
0r
0q
0p
0o
0n
0l
0k
0j
0i
0h
0f
0e
0d
0c
0b
0`
0_
0^
0]
0\
0Z
0Y
0X
0W
0V
0T
0S
0R
0Q
0P
0N
0M
0L
0K
0J
0H
0G
0F
0E
0D
0B
0A
0@
0?
0>
0<
0;
0:
09
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
00
b0 /
0.
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
0%
b0 $
0#
b0 "
1!
$end
#5000
0!
b1000 "
b1000 1
1N
1J
1E
1D
1?
1>
b111 7
19
0H
1G
1;
0<
b1000 -
b1000 4
b1000 5
0B
b101 6
b101 /
b101 3
1:
1@
b101 '
b101 +
b11 &
b11 *
b11 2
#10000
0h#
b0 r#
1@#
#15000
b10000 "
b10000 1
1T
1P
0N
b1111 7
1K
b10000 -
b10000 4
b10000 5
0H
1M
0G
b1001 6
1F
b1001 /
b1001 3
b1001 (
b1001 ,
b111 &
b111 *
b111 2
1%
#20000
1D#
b0 I#
b0 .&
02$
0.$
0)$
0&$
1,$
08$
0>$
0D$
0J$
0P$
0V$
0\$
0b$
0h$
0n$
0t$
0z$
0"%
0(%
0.%
04%
0:%
0@%
0F%
0L%
0R%
0X%
0^%
0d%
0j%
0p%
0v%
0|%
0N#
0"$
0($
04$
0:$
0@$
0F$
0L$
0R$
0X$
0^$
0d$
0j$
0p$
0v$
0|$
0$%
0*%
00%
06%
0<%
0B%
0H%
0N%
0T%
0Z%
0`%
0f%
0l%
0r%
0x%
b100 M#
b100 v#
b100 w#
0~#
0{#
0#$
0/$
05$
0;$
0A$
0G$
0M$
0S$
0Y$
0_$
0e$
0k$
0q$
0w$
0}$
0%%
0+%
01%
07%
0=%
0C%
0I%
0O%
0U%
0[%
0a%
0g%
0m%
0s%
b0 y#
0y%
0{%
0u%
0o%
0i%
0c%
0]%
0W%
0Q%
0K%
0E%
0?%
09%
03%
0-%
0'%
0!%
0y$
0s$
0m$
0g$
0a$
0[$
0U$
0O$
0I$
0C$
0=$
07$
01$
1+$
0%$
0}#
07&
0=&
0C&
0I&
0O&
0U&
0[&
0a&
0g&
0m&
0s&
0y&
0!'
0''
0-'
03'
09'
0?'
0E'
0K'
0Q'
0W'
0]'
0c'
0i'
0o'
0u'
0{'
0#(
0)(
0/(
05(
b100 x#
0|#
0$$
0*$
00$
06$
0<$
0B$
0H$
0N$
0T$
0Z$
0`$
0f$
0l$
0r$
0x$
0~$
0&%
0,%
02%
08%
0>%
0D%
0J%
0P%
0V%
0\%
0b%
0h%
0n%
0t%
0z%
b100010001100010000000000000000 T#
b100010001100010000000000000000 V(
b0 m#
b0 '&
b0 l#
b0 &&
b0 /&
b0 e#
z=#
b100 g#
b100 t#
b0 p#
b0 s#
b0 W(
0B#
0@#
#25000
b1111 "
b1111 1
0T
0P
0K
0J
0E
0D
0?
1B
0>
b0 7
09
1<
1H
b1111 -
b1111 4
b1111 5
1N
0M
1G
b101 6
0:
0F
1L
b101 /
b101 3
b0 (
b0 ,
b1010 &
b1010 *
b1010 2
0%
#30000
1@#
#35000
b1010 "
b1010 1
17#
16#
11#
10#
1+#
1*#
1%#
1$#
1}"
1|"
1w"
1v"
1q"
1p"
1k"
1j"
1e"
1d"
1_"
1^"
1Y"
1X"
1S"
1R"
1M"
1L"
1G"
1F"
1A"
1@"
1;"
1:"
15"
14"
1/"
1."
1)"
1("
1#"
1""
1{
1z
1u
1t
1o
1n
1i
1h
1c
1b
1]
1\
1W
1V
1Q
1D
1P
0:#
04#
0.#
0(#
0"#
0z"
0t"
0n"
0h"
0b"
0\"
0V"
0P"
0J"
0D"
0>"
08"
02"
0,"
0&"
0~
0x
0r
0l
0f
0`
0Z
0T
0<
1?
1K
0#
1B
1N
19#
13#
1-#
1'#
1!#
1y"
1s"
1m"
1g"
1a"
1["
1U"
1O"
1I"
1C"
1="
17"
11"
1+"
1%"
1}
1w
1q
1k
1e
1_
1Y
1S
1M
0G
1A
0;
1>
1J
b11111111111111111111111111111010 6
00
19
b11111111111111111111111111111111 7
1E
b1010 -
b1010 4
b1010 5
0H
1.
1:
1F
b10 $
b10 )
b1111 &
b1111 *
b1111 2
#40000
0@#
#45000
b10100 "
b10100 1
1D
0B
1?
0N
1H
1>
0M
1G
0A
1;
b11111111111111111111111111111111 7
19
b11111111111111111111111111110101 6
0<
b10100 -
b10100 4
b10100 5
1T
b1010 /
b1010 3
0:
1R
b1010 '
b1010 +
b11110 &
b11110 *
b11110 2
#50000
1@#
#55000
b1 "
b1 1
1j"
1:"
17#
1e"
15"
1h
1c
16#
1d"
14"
11#
1_"
1/"
1b
1]
10#
1^"
1."
1+#
1Y"
1)"
1\
1W
1*#
1X"
1("
1%#
1S"
1#"
1V
1>
1Q
1$#
1|"
1v"
1p"
1R"
1L"
1F"
1@"
1""
1z
1t
1n
1J
19
0"#
1}"
0z"
1w"
0t"
1q"
0n"
1k"
0P"
1M"
0J"
1G"
0D"
1A"
0>"
1;"
0~
1{
0x
1u
0r
1o
0l
1i
1E
0<
0T
09#
03#
0-#
0'#
0g"
0a"
0["
0U"
07"
01"
0+"
0%"
0e
0_
0Y
0S
1M
1A
1D
1P
10
1!#
1y"
1s"
1m"
1O"
1I"
1C"
1="
1}
1w
1q
1k
1G
1;
1?
b11111111111111111111111111111111 7
1K
b1111000011110000111100001111 6
0B
0H
0N
0Z
0`
0f
0&"
0,"
02"
08"
0V"
0\"
0b"
0h"
0(#
0.#
04#
b0 -
b0 4
b0 5
0:#
0.
b1111000011110000111100001111 /
b1111000011110000111100001111 3
1:
0@
0F
0L
1X
1^
1d
1$"
1*"
10"
16"
1T"
1Z"
1`"
1f"
1&#
1,#
12#
18#
b100 $
b100 )
b1111000011110000111100001111 '
b1111000011110000111100001111 +
b11110000111100001111000011110001 &
b11110000111100001111000011110001 *
b11110000111100001111000011110001 2
#60000
0@#
#65000
b11111111111111111111111111111111 "
b11111111111111111111111111111111 1
b101 $
b101 )
#70000
1@#
#75000
b1000 "
b1000 1
0$#
0|"
0v"
0p"
0R"
0L"
0F"
0@"
0""
0z
0t
0n
0P
0J
00
0"#
0}"
0z"
0w"
0t"
0q"
0k"
0P"
0M"
0J"
0G"
0D"
0A"
0;"
0~
0{
0x
0u
0r
0o
0i
0N
0K
1H
0E
0V
0\
0b
0h
0("
0."
04"
0:"
0X"
0^"
0d"
0j"
0*#
00#
06#
0Q
0W
0]
0c
0#"
0)"
0/"
05"
0S"
0Y"
0_"
0e"
0%#
0+#
01#
b11 7
07#
0!#
0y"
0s"
0m"
0O"
0I"
0C"
0="
0}
0w
0q
0k
0M
0G
0T
0Z
0`
0f
0&"
0,"
02"
08"
0V"
0\"
0b"
0h"
0(#
0.#
04#
b100 -
b100 4
b100 5
0:#
b11 6
b11 /
b11 3
0R
0X
0^
0d
0$"
0*"
00"
06"
0T"
0Z"
0`"
0f"
0&#
0,#
02#
08#
b110 $
b110 )
b11 '
b11 +
b1 &
b1 *
b1 2
#80000
1;#
1B#
0@#
#85000
b10 "
b10 1
0H
0D
0?
1B
0>
b0 7
09
0;
0<
b1010 -
b1010 4
b1010 5
1N
b10 6
b10 /
b10 3
0:
1L
b111 $
b111 )
b10 '
b10 +
b1000 &
b1000 *
b1000 2
#90000
1U#
0W#
0V#
0X#
0[#
0Z#
0Y#
b1 \#
b1 U(
1]#
b10001 J#
b10001 $&
b10001 K#
b10001 #&
b10001 H#
b10001 !&
b110 D(
b1000 P#
b1000 E(
b10001 G#
b10001 }%
b10001 F#
b10001 ~%
b0 L#
b0 R#
b0 _#
b10001100010000000000000000 Q#
b0 E#
b0 S#
b0 9(
b1 r#
b100010001100010000000000000000 o#
1@#
#95000
b1 "
b1 1
0H
1J
1>
1E
19
1D
b111 7
1?
1G
0A
1;
0<
0B
b1000 -
b1000 4
b1000 5
1N
b101 6
b101 /
b101 3
1:
1@
0L
b1000 $
b1000 )
b101 '
b101 +
b11 &
b11 *
b11 2
#100000
0@#
#105000
1!
b0 "
b0 1
1N
1J
1E
1D
b111 7
1?
0G
1A
0B
b1000 -
b1000 4
b1000 5
0H
b11 6
b11 /
b11 3
0@
1F
b11 '
b11 +
b101 &
b101 *
b101 2
#110000
0D#
b10001 I#
b10001 .&
0W&
0S&
0N&
0O#
0?&
0,&
07(
01(
0+(
0%(
0}'
0w'
0q'
0k'
0e'
0_'
0Y'
0S'
0M'
0G'
0A'
0;'
05'
0/'
0)'
0#'
0{&
0u&
0o&
0i&
0c&
0]&
1Q&
0K&
0E&
0;&
03(
0-(
0'(
0!(
0y'
0s'
0m'
0g'
0a'
0['
0U'
0O'
0I'
0C'
0='
07'
01'
0+'
0%'
0}&
0w&
0q&
0k&
0e&
0_&
0Y&
0M&
0G&
0A&
06&
04(
0.(
0((
0"(
0z'
0t'
0n'
0h'
0b'
0\'
0V'
0P'
0J'
0D'
0>'
08'
02'
0,'
0&'
0~&
0x&
0r&
0l&
0f&
0`&
0Z&
0T&
0H&
0B&
b0 4&
0<&
b10001 )&
b10001 1&
b10001 2&
19&
06(
00(
0*(
0$(
0|'
0v'
0p'
0j'
0d'
0^'
0X'
0R'
0L'
0F'
0@'
0:'
04'
0.'
0('
0"'
0z&
0t&
0n&
0h&
0b&
0\&
0V&
0P&
0J&
0D&
0>&
08&
b0 3&
0*&
17&
1O&
b0 +&
b0 0&
b0 ^#
b0 -&
b0 C(
b10 r#
b0 n#
b0 (&
b10001 m#
b10001 '&
b10001 l#
b10001 &&
b10001 /&
1k#
b1 j#
b1 8(
1@#
#115000
0!
b1 "
b1 1
1T
0>
0J
1P
09
0E
b1010 7
1K
1M
0;
0<
0B
1H
b10100 -
b10100 4
b10100 5
0N
b1010 6
b1010 /
b1010 3
0:
1@
0F
1L
b1001 $
b1001 )
b1010 '
b1010 +
b1010 &
b1010 *
b1010 2
#120000
0@#
#125000
1!
b0 "
b0 1
0Z
0P
0D
0V
0K
0J
0?
1T
0Q
1N
1H
b0 7
0E
b11110 -
b11110 4
b11110 5
1B
1S
0M
1G
0A
b10100 6
b10100 /
b10100 3
b10100 '
b10100 +
#130000
b10001 q#
b10001 "&
b100 r#
1@#
#135000
0!
b1 "
b1 1
b1010 $
b1010 )
#140000
0@#
#145000
1!
b0 "
b0 1
1P
1D
1K
b1010 7
1?
1T
0N
1H
b10100 -
b10100 4
b10100 5
0B
0S
1M
0G
1A
b1010 6
b1010 /
b1010 3
b1010 '
b1010 +
#150000
1D#
b0 I#
b0 .&
12$
1.$
b100 y#
1)$
b1000 M#
b1000 v#
b1000 w#
0,$
09&
b0 )&
b0 1&
b0 2&
0Q&
1*$
b100000000010000000000001001011 T#
b100000000010000000000001001011 V(
07&
0O&
b100 p#
b100 s#
b100 W(
b0 r#
1h#
b0 m#
b0 '&
b0 l#
b0 &&
b0 /&
1@#
#155000
0!
b11011100101110110010001111101111 "
b11011100101110110010001111101111 1
1N
10#
1v"
1+#
1q"
1#
10
1,"
1`
16#
1*#
1$#
1|"
1p"
1("
1\
0P
0D
17#
11#
1%#
1}"
1w"
1k"
1#"
1W
0K
0?
1V"
1>"
1l
1f
1B
1<
0J
1V
0E
b11111111000000000001000000110000 7
1Q
19#
13#
1'#
1!#
1y"
1m"
1U"
1="
1%"
1k
1e
1Y
1S
0M
0A
1;
1H
0T
1Z
1r
0&"
1D"
1P"
1\"
1h"
0n"
0t"
1z"
1"#
1(#
0.#
14#
b11011100101110110010001111101111 -
b11011100101110110010001111101111 4
b11011100101110110010001111101111 5
1:#
b11011101000100010001000110110001 6
b11011101000100010001000110110001 /
b11011101000100010001000110110001 3
1F
1R
1X
1p
1$"
1B"
1N"
1Z"
1f"
1l"
1r"
1x"
1~"
1&#
1,#
12#
18#
b0 $
b0 )
b11011101000100010001000110110001 '
b11011101000100010001000110110001 +
b11111111101010100001001000111110 &
b11111111101010100001001000111110 *
b11111111101010100001001000111110 2
#160000
0@#
#165000
