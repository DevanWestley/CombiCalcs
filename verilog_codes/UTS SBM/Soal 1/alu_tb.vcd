$date
	Thu Apr 10 12:36:38 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module MIPS_TB $end
$var wire 1 ! zero $end
$var wire 32 " result [31:0] $end
$var wire 1 # overflow $end
$var reg 4 $ aluCtrl [3:0] $end
$var reg 1 % aluSrc $end
$var reg 32 & data1 [31:0] $end
$var reg 32 ' data2 [31:0] $end
$var reg 32 ( imm [31:0] $end
$scope module uut $end
$var wire 1 ) add_overflow $end
$var wire 4 * aluCtrl [3:0] $end
$var wire 1 % aluSrc $end
$var wire 32 + data1 [31:0] $end
$var wire 32 , data2 [31:0] $end
$var wire 32 - imm [31:0] $end
$var wire 1 . sub_overflow $end
$var wire 1 ! zero $end
$var wire 32 / sum [31:0] $end
$var wire 1 # overflow $end
$var wire 1 0 op $end
$var wire 32 1 d2 [31:0] $end
$var wire 1 2 carry $end
$var reg 32 3 result [31:0] $end
$scope module addsub $end
$var wire 32 4 num1 [31:0] $end
$var wire 32 5 num2 [31:0] $end
$var wire 1 0 op $end
$var wire 32 6 sumO [31:0] $end
$var wire 32 7 sum [31:0] $end
$var wire 32 8 num2C [31:0] $end
$var wire 1 2 carryO $end
$var wire 32 9 carry [31:0] $end
$scope begin gen_block[0] $end
$var parameter 2 : i $end
$scope begin genblk1 $end
$scope module addr0 $end
$var wire 1 0 carryI $end
$var wire 1 ; carryO $end
$var wire 1 < num1 $end
$var wire 1 = num2 $end
$var wire 1 > sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[1] $end
$var parameter 2 ? i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 @ carryI $end
$var wire 1 A carryO $end
$var wire 1 B num1 $end
$var wire 1 C num2 $end
$var wire 1 D sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[2] $end
$var parameter 3 E i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 F carryI $end
$var wire 1 G carryO $end
$var wire 1 H num1 $end
$var wire 1 I num2 $end
$var wire 1 J sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[3] $end
$var parameter 3 K i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 L carryI $end
$var wire 1 M carryO $end
$var wire 1 N num1 $end
$var wire 1 O num2 $end
$var wire 1 P sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[4] $end
$var parameter 4 Q i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 R carryI $end
$var wire 1 S carryO $end
$var wire 1 T num1 $end
$var wire 1 U num2 $end
$var wire 1 V sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[5] $end
$var parameter 4 W i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 X carryI $end
$var wire 1 Y carryO $end
$var wire 1 Z num1 $end
$var wire 1 [ num2 $end
$var wire 1 \ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[6] $end
$var parameter 4 ] i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 ^ carryI $end
$var wire 1 _ carryO $end
$var wire 1 ` num1 $end
$var wire 1 a num2 $end
$var wire 1 b sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[7] $end
$var parameter 4 c i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 d carryI $end
$var wire 1 e carryO $end
$var wire 1 f num1 $end
$var wire 1 g num2 $end
$var wire 1 h sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[8] $end
$var parameter 5 i i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 j carryI $end
$var wire 1 k carryO $end
$var wire 1 l num1 $end
$var wire 1 m num2 $end
$var wire 1 n sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[9] $end
$var parameter 5 o i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 p carryI $end
$var wire 1 q carryO $end
$var wire 1 r num1 $end
$var wire 1 s num2 $end
$var wire 1 t sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[10] $end
$var parameter 5 u i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 v carryI $end
$var wire 1 w carryO $end
$var wire 1 x num1 $end
$var wire 1 y num2 $end
$var wire 1 z sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[11] $end
$var parameter 5 { i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 | carryI $end
$var wire 1 } carryO $end
$var wire 1 ~ num1 $end
$var wire 1 !" num2 $end
$var wire 1 "" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[12] $end
$var parameter 5 #" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 $" carryI $end
$var wire 1 %" carryO $end
$var wire 1 &" num1 $end
$var wire 1 '" num2 $end
$var wire 1 (" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[13] $end
$var parameter 5 )" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 *" carryI $end
$var wire 1 +" carryO $end
$var wire 1 ," num1 $end
$var wire 1 -" num2 $end
$var wire 1 ." sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[14] $end
$var parameter 5 /" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 0" carryI $end
$var wire 1 1" carryO $end
$var wire 1 2" num1 $end
$var wire 1 3" num2 $end
$var wire 1 4" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[15] $end
$var parameter 5 5" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 6" carryI $end
$var wire 1 7" carryO $end
$var wire 1 8" num1 $end
$var wire 1 9" num2 $end
$var wire 1 :" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[16] $end
$var parameter 6 ;" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 <" carryI $end
$var wire 1 =" carryO $end
$var wire 1 >" num1 $end
$var wire 1 ?" num2 $end
$var wire 1 @" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[17] $end
$var parameter 6 A" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 B" carryI $end
$var wire 1 C" carryO $end
$var wire 1 D" num1 $end
$var wire 1 E" num2 $end
$var wire 1 F" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[18] $end
$var parameter 6 G" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 H" carryI $end
$var wire 1 I" carryO $end
$var wire 1 J" num1 $end
$var wire 1 K" num2 $end
$var wire 1 L" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[19] $end
$var parameter 6 M" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 N" carryI $end
$var wire 1 O" carryO $end
$var wire 1 P" num1 $end
$var wire 1 Q" num2 $end
$var wire 1 R" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[20] $end
$var parameter 6 S" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 T" carryI $end
$var wire 1 U" carryO $end
$var wire 1 V" num1 $end
$var wire 1 W" num2 $end
$var wire 1 X" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[21] $end
$var parameter 6 Y" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 Z" carryI $end
$var wire 1 [" carryO $end
$var wire 1 \" num1 $end
$var wire 1 ]" num2 $end
$var wire 1 ^" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[22] $end
$var parameter 6 _" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 `" carryI $end
$var wire 1 a" carryO $end
$var wire 1 b" num1 $end
$var wire 1 c" num2 $end
$var wire 1 d" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[23] $end
$var parameter 6 e" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 f" carryI $end
$var wire 1 g" carryO $end
$var wire 1 h" num1 $end
$var wire 1 i" num2 $end
$var wire 1 j" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[24] $end
$var parameter 6 k" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 l" carryI $end
$var wire 1 m" carryO $end
$var wire 1 n" num1 $end
$var wire 1 o" num2 $end
$var wire 1 p" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[25] $end
$var parameter 6 q" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 r" carryI $end
$var wire 1 s" carryO $end
$var wire 1 t" num1 $end
$var wire 1 u" num2 $end
$var wire 1 v" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[26] $end
$var parameter 6 w" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 x" carryI $end
$var wire 1 y" carryO $end
$var wire 1 z" num1 $end
$var wire 1 {" num2 $end
$var wire 1 |" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[27] $end
$var parameter 6 }" i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 ~" carryI $end
$var wire 1 !# carryO $end
$var wire 1 "# num1 $end
$var wire 1 ## num2 $end
$var wire 1 $# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[28] $end
$var parameter 6 %# i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 &# carryI $end
$var wire 1 '# carryO $end
$var wire 1 (# num1 $end
$var wire 1 )# num2 $end
$var wire 1 *# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[29] $end
$var parameter 6 +# i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 ,# carryI $end
$var wire 1 -# carryO $end
$var wire 1 .# num1 $end
$var wire 1 /# num2 $end
$var wire 1 0# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[30] $end
$var parameter 6 1# i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 2# carryI $end
$var wire 1 3# carryO $end
$var wire 1 4# num1 $end
$var wire 1 5# num2 $end
$var wire 1 6# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[31] $end
$var parameter 6 7# i $end
$scope begin genblk1 $end
$scope module addrN $end
$var wire 1 8# carryI $end
$var wire 1 9# carryO $end
$var wire 1 :# num1 $end
$var wire 1 ;# num2 $end
$var wire 1 <# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11111 7#
b11110 1#
b11101 +#
b11100 %#
b11011 }"
b11010 w"
b11001 q"
b11000 k"
b10111 e"
b10110 _"
b10101 Y"
b10100 S"
b10011 M"
b10010 G"
b10001 A"
b10000 ;"
b1111 5"
b1110 /"
b1101 )"
b1100 #"
b1011 {
b1010 u
b1001 o
b1000 i
b111 c
b110 ]
b101 W
b100 Q
b11 K
b10 E
b1 ?
b0 :
$end
#0
$dumpvars
0<#
0;#
0:#
09#
08#
06#
05#
04#
03#
02#
00#
0/#
0.#
0-#
0,#
0*#
0)#
0(#
0'#
0&#
0$#
0##
0"#
0!#
0~"
0|"
0{"
0z"
0y"
0x"
0v"
0u"
0t"
0s"
0r"
0p"
0o"
0n"
0m"
0l"
0j"
0i"
0h"
0g"
0f"
0d"
0c"
0b"
0a"
0`"
0^"
0]"
0\"
0["
0Z"
0X"
0W"
0V"
0U"
0T"
0R"
0Q"
0P"
0O"
0N"
0L"
0K"
0J"
0I"
0H"
0F"
0E"
0D"
0C"
0B"
0@"
0?"
0>"
0="
0<"
0:"
09"
08"
07"
06"
04"
03"
02"
01"
00"
0."
0-"
0,"
0+"
0*"
0("
0'"
0&"
0%"
0$"
0""
0!"
0~
0}
0|
0z
0y
0x
0w
0v
0t
0s
0r
0q
0p
0n
0m
0l
0k
0j
0h
0g
0f
0e
0d
0b
0a
0`
0_
0^
0\
0[
0Z
0Y
0X
0V
0U
0T
0S
0R
0P
0O
0N
0M
0L
0J
0I
0H
0G
0F
0D
0C
0B
0A
0@
0>
0=
0<
0;
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
02
b0 1
00
b0 /
0.
b0 -
b0 ,
b0 +
b0 *
0)
b0 (
b0 '
b0 &
0%
b0 $
0#
b0 "
1!
$end
#5000
1P
1L
1G
1F
1A
1@
b111 9
1;
0!
0J
b1000 "
b1000 3
1I
1=
0>
b1000 /
b1000 6
b1000 7
0D
b101 8
b101 1
b101 5
1<
1B
b101 '
b101 ,
b11 &
b11 +
b11 4
#15000
0!
1V
1R
0P
b1111 9
1M
b10000 "
b10000 3
b10000 /
b10000 6
b10000 7
0J
1O
0I
b1001 8
1H
b1001 1
b1001 5
b1001 (
b1001 -
b111 &
b111 +
b111 4
1%
#25000
0V
0R
0M
0L
0G
0F
0A
1D
0@
b0 9
0;
b1111 "
b1111 3
1>
1J
b1111 /
b1111 6
b1111 7
1P
0O
1I
b101 8
0<
0H
1N
b101 1
b101 5
b0 (
b0 -
b1010 &
b1010 +
b1010 4
0%
#35000
19#
18#
13#
12#
1-#
1,#
1'#
1&#
1!#
1~"
1y"
1x"
1s"
1r"
1m"
1l"
1g"
1f"
1a"
1`"
1["
1Z"
1U"
1T"
1O"
1N"
1I"
1H"
1C"
1B"
1="
1<"
17"
16"
11"
10"
1+"
1*"
1%"
1$"
1}
1|
1w
1v
1q
1p
1k
1j
1e
1d
1_
1^
1Y
1X
0)
1S
1F
1R
0<#
06#
00#
0*#
0$#
0|"
0v"
0p"
0j"
0d"
0^"
0X"
0R"
0L"
0F"
0@"
0:"
04"
0."
0("
0""
0z
0t
0n
0h
0b
0\
0V
0>
1A
1M
1D
1P
1;#
15#
1/#
1)#
1##
1{"
1u"
1o"
1i"
1c"
1]"
1W"
1Q"
1K"
1E"
1?"
19"
13"
1-"
1'"
1!"
1y
1s
1m
1g
1a
1[
1U
1O
0I
1C
0=
1@
1L
b11111111111111111111111111111010 8
02
1;
b1010 "
b1010 3
b11111111111111111111111111111111 9
1G
b1010 /
b1010 6
b1010 7
0J
10
1<
1H
b10 $
b10 *
b1111 &
b1111 +
b1111 4
#45000
1F
0D
1A
0P
1J
1@
0O
1I
0C
1=
b11111111111111111111111111111111 9
1;
b10100 "
b10100 3
b11111111111111111111111111110101 8
0>
b10100 /
b10100 6
b10100 7
1V
b1010 1
b1010 5
0<
1T
b1010 '
b1010 ,
b11110 &
b11110 +
b11110 4
#55000
1l"
1<"
19#
1g"
17"
1j
1e
18#
1f"
16"
13#
1a"
11"
1d
1_
12#
1`"
10"
1-#
1["
1+"
1^
1Y
1,#
1Z"
1*"
1'#
1U"
1%"
1X
1@
1S
1&#
1~"
1x"
1r"
1T"
1N"
1H"
1B"
1$"
1|
1v
1p
1L
1;
0$#
1!#
0|"
1y"
0v"
1s"
0p"
1m"
0R"
1O"
0L"
1I"
0F"
1C"
0@"
1="
0""
1}
0z
1w
0t
1q
0n
1k
1G
0>
0V
0;#
05#
0/#
0)#
0i"
0c"
0]"
0W"
09"
03"
0-"
0'"
0g
0a
0[
0U
1O
1C
1F
1R
12
1##
1{"
1u"
1o"
1Q"
1K"
1E"
1?"
1!"
1y
1s
1m
1I
1=
1A
b11111111111111111111111111111111 9
1M
b1111000011110000111100001111 8
1.
0D
0J
0P
0\
0b
0h
0("
0."
04"
0:"
0X"
0^"
0d"
0j"
0*#
00#
06#
b0 /
b0 6
b0 7
0<#
00
b1111000011110000111100001111 1
b1111000011110000111100001111 5
1<
0B
0H
0N
1Z
1`
1f
1&"
1,"
12"
18"
1V"
1\"
1b"
1h"
1(#
1.#
14#
1:#
b1 "
b1 3
b100 $
b100 *
b1111000011110000111100001111 '
b1111000011110000111100001111 ,
b11110000111100001111000011110001 &
b11110000111100001111000011110001 +
b11110000111100001111000011110001 4
#65000
b11111111111111111111111111111111 "
b11111111111111111111111111111111 3
b101 $
b101 *
#75000
0&#
0~"
0x"
0r"
0T"
0N"
0H"
0B"
0$"
0|
0v
0p
0R
0L
0)
02
0$#
0!#
0|"
0y"
0v"
0s"
0m"
0R"
0O"
0L"
0I"
0F"
0C"
0="
0""
0}
0z
0w
0t
0q
0k
0P
0M
1J
0G
0X
0^
0d
0j
0*"
00"
06"
0<"
0Z"
0`"
0f"
0l"
0,#
02#
08#
0S
0Y
0_
0e
0%"
0+"
01"
07"
0U"
0["
0a"
0g"
0'#
0-#
03#
b11 9
09#
0##
0{"
0u"
0o"
0Q"
0K"
0E"
0?"
0!"
0y
0s
0m
0O
0I
0.
0V
0\
0b
0h
0("
0."
04"
0:"
0X"
0^"
0d"
0j"
0*#
00#
06#
b100 /
b100 6
b100 7
0<#
b11 8
b11 1
b11 5
0T
0Z
0`
0f
0&"
0,"
02"
08"
0V"
0\"
0b"
0h"
0(#
0.#
04#
0:#
b1000 "
b1000 3
b110 $
b110 *
b11 '
b11 ,
b1 &
b1 +
b1 4
#85000
0J
0F
0A
1D
0@
b0 9
0;
0=
0>
b1010 /
b1010 6
b1010 7
1P
b10 8
b10 1
b10 5
0<
1N
b10 "
b10 3
b111 $
b111 *
b10 '
b10 ,
b1000 &
b1000 +
b1000 4
#95000
0J
1L
1@
1G
1;
1F
b111 9
1A
1I
0C
1=
0>
0D
b1000 /
b1000 6
b1000 7
1P
b101 8
b101 1
b101 5
1<
1B
0N
b1 "
b1 3
b1000 $
b1000 *
b101 '
b101 ,
b11 &
b11 +
b11 4
#105000
1P
1L
1G
1F
b111 9
1A
0I
1C
0D
b1000 /
b1000 6
b1000 7
0J
1!
b11 8
b11 1
b11 5
0B
1H
b0 "
b0 3
b11 '
b11 ,
b101 &
b101 +
b101 4
#115000
1V
0@
0L
1R
0;
0G
b1010 9
1M
1O
0=
0>
0D
1J
b10100 /
b10100 6
b10100 7
0P
0!
b1010 8
b1010 1
b1010 5
0<
1B
0H
1N
b1 "
b1 3
b1001 $
b1001 *
b1010 '
b1010 ,
b1010 &
b1010 +
b1010 4
#125000
0\
0R
0F
0X
0M
0L
0A
1V
0S
1P
1J
b0 9
0G
b11110 /
b11110 6
b11110 7
1D
1!
1U
0O
1I
0C
b10100 8
b0 "
b0 3
b10100 1
b10100 5
b10100 '
b10100 ,
#135000
0!
b1 "
b1 3
b1010 $
b1010 *
#145000
1R
1F
1M
b1010 9
1A
1V
0P
1J
b10100 /
b10100 6
b10100 7
0D
1!
0U
1O
0I
1C
b1010 8
b0 "
b0 3
b1010 1
b1010 5
b1010 '
b1010 ,
#155000
1P
12#
1x"
1-#
1s"
12
1."
1b
18#
1,#
1&#
1~"
1r"
1*"
1^
0R
0F
19#
13#
1'#
1!#
1y"
1m"
1%"
1Y
0M
0A
0#
1X"
1@"
1n
1h
1D
1>
0L
1X
0)
0G
b11111111000000000001000000110000 9
1S
1;#
15#
1)#
1##
1{"
1o"
1W"
1?"
1'"
1m
1g
1[
1U
0O
0C
1=
0.
1J
0V
1\
1t
0("
1F"
1R"
1^"
1j"
0p"
0v"
1|"
1$#
1*#
00#
16#
b11011100101110110010001111101111 /
b11011100101110110010001111101111 6
b11011100101110110010001111101111 7
1<#
0!
b11011101000100010001000110110001 8
b11011101000100010001000110110001 1
b11011101000100010001000110110001 5
1H
1T
1Z
1r
1&"
1D"
1P"
1\"
1h"
1n"
1t"
1z"
1"#
1(#
1.#
14#
1:#
b11011100101110110010001111101111 "
b11011100101110110010001111101111 3
b0 $
b0 *
b11011101000100010001000110110001 '
b11011101000100010001000110110001 ,
b11111111101010100001001000111110 &
b11111111101010100001001000111110 +
b11111111101010100001001000111110 4
#165000
