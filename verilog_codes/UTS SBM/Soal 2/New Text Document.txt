#!/usr/bin/env bash
# BTC Script Debugging with btcdeb
# Demonstrasi implementasi skrip Bitcoin standar menggunakan btcdeb (LO1).
# Pastikan btcdeb sudah terinstall dan berada di PATH.

# ====== 1. Pay-to-Public-Key-Hash (P2PKH) ======
# scriptPubKey: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG
# scriptSig: <sig> <pubKey>
function test_p2pkh() {
  local pubKeyHash="76a91489abcdefabbaabbaabbaabbaabbaabbaabbaabba88ac"
  local signature="3045022100abcdef.."  # Gantilah dengan tanda tangan DER aktual
  local pubKey="03abcdef"             # Gantilah dengan kunci publik aktual

  echo "\n=== P2PKH ==="
  btcdeb \
    --script "$pubKeyHash OP_EQUALVERIFY OP_CHECKSIG" \
    --scriptSig "$signature $pubKey"
}

# ====== 2. Pay-to-Public-Key (P2PK) ======
# scriptPubKey: <pubKey> OP_CHECKSIG
# scriptSig: <sig>
function test_p2pk() {
  local pubKey="03abcdef..."
  local signature="30440220abcdef..."

  echo "\n=== P2PK ==="
  btcdeb \
    --script "$pubKey OP_CHECKSIG" \
    --scriptSig "$signature"
}

# ====== 3. Multi-Signature (2-of-3) ======
# scriptPubKey: OP_2 <pub1> <pub2> <pub3> OP_3 OP_CHECKMULTISIG
# scriptSig: OP_0 <sig1> <sig2>
function test_multisig() {
  local pub1="0222..."
  local pub2="0333..."
  local pub3="0444..."
  local sig1="30450221..."
  local sig2="30450220..."

  echo "\n=== 2-of-3 Multisig ==="
  btcdeb \
    --script "OP_2 $pub1 $pub2 $pub3 OP_3 OP_CHECKMULTISIG" \
    --scriptSig "OP_0 $sig1 $sig2"
}

# ====== 4. Data Output (OP_RETURN) ======
# scriptPubKey: OP_RETURN <hex data>
function test_op_return() {
  local data="48656c6c6f2c20626974636f696e21"  # "Hello, bitcoin!" dalam hex

  echo "\n=== OP_RETURN ==="
  btcdeb \
    --script "OP_RETURN $data"
}

# ====== 5. Pay-to-Script-Hash (P2SH) ======
# Redeem script (contoh multisig): OP_2 <pub1> <pub2> <pub3> OP_3 OP_CHECKMULTISIG
# redeemScriptHex: hex dari redeem script di atas
# scriptPubKey: OP_HASH160 <hash160(redeemScript)> OP_EQUAL
# scriptSig: <sigScript> <redeemScriptHex>
function test_p2sh() {
  local redeemScriptHex="52210222...210333...210444...53ae"  # contoh hex redeem script
  # Hitung hash160 (RIPEMD160(SHA256(redeemScript)))
  local redeemHash=$(echo "$redeemScriptHex" | xxd -r -p | openssl dgst -sha256 -binary | openssl dgst -ripemd160 -binary | xxd -p)
  local sig1="30450221..."
  local sig2="30450220..."

  echo "\n=== P2SH ==="
  echo "Redeem script hash160: $redeemHash"
  btcdeb \
    --script "OP_HASH160 $redeemHash OP_EQUAL" \
    --scriptSig "$sig1 $sig2 $redeemScriptHex"
}

# Jalankan semua tes
test_p2pkh
test_p2pk
test_multisig
test_op_return
test_p2sh
